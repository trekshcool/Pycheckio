type: checkiO
files:
  - name: mission.py
    visible: true
    text: |
      def longest_substr(s: str) -> int:
          # your code here
          # pastlist = []
          # currentmax = 0
          # max = 0
          #
          # for letter in s:
          #
          #     if letter in pastlist:
          #         if max < currentmax:
          #             max = currentmax
          #         currentmax = 0
          #
          #     pastlist.append(letter)
          #     currentmax = currentmax + 1
          #
          # if max < currentmax:
          #     max = currentmax
      
          if len(s) == 0: return 0
      
          low,up,maxbound = 0,1,(0,1)
          used = {s[low]}
      
          while up < len(s):
              if s[up] in used:
                  used.remove(s[low])
                  low += 1
              else:
                  used.add(s[up])
                  up += 1
      
              if up - low > maxbound[1] - maxbound[0]:
                  maxbound = (low,up)
      
      
          return maxbound[1] - maxbound[0]
      
      
      print("Example:")
      print(longest_substr("abcabcbb"))
      
      # These "asserts" are used for self-checking
      assert longest_substr("abcabcbb") == 3
      assert longest_substr("bbbbb") == 1
      assert longest_substr("pwwkew") == 3
      assert longest_substr("abcdef") == 6
      assert longest_substr("") == 0
      assert longest_substr("au") == 2
      assert longest_substr("dvdf") == 3
      
      print("The mission is done! Click 'Check Solution' to earn rewards!")
    learner_created: false
status: Solved
feedback:
  message: All tests passed
  time: "Wed, 29 Nov 2023 17:20:34 UTC"
code: |
  def longest_substr(s: str) -> int:
      # your code here
      # pastlist = []
      # currentmax = 0
      # max = 0
      #
      # for letter in s:
      #
      #     if letter in pastlist:
      #         if max < currentmax:
      #             max = currentmax
      #         currentmax = 0
      #
      #     pastlist.append(letter)
      #     currentmax = currentmax + 1
      #
      # if max < currentmax:
      #     max = currentmax

      if len(s) == 0: return 0

      low,up,maxbound = 0,1,(0,1)
      used = {s[low]}

      while up < len(s):
          if s[up] in used:
              used.remove(s[low])
              low += 1
          else:
              used.add(s[up])
              up += 1

          if up - low > maxbound[1] - maxbound[0]:
              maxbound = (low,up)


      return maxbound[1] - maxbound[0]


  print("Example:")
  print(longest_substr("abcabcbb"))

  # These "asserts" are used for self-checking
  assert longest_substr("abcabcbb") == 3
  assert longest_substr("bbbbb") == 1
  assert longest_substr("pwwkew") == 3
  assert longest_substr("abcdef") == 6
  assert longest_substr("") == 0
  assert longest_substr("au") == 2
  assert longest_substr("dvdf") == 3

  print("The mission is done! Click 'Check Solution' to earn rewards!")
seconds_from_change: 2
